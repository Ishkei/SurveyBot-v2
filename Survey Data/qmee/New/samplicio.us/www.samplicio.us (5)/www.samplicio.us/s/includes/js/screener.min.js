function getViewport() {
  var e = window,
    a = "inner";
  if (!("innerWidth" in window)) {
    a = "client";
    e = document.documentElement || document.body;
  }
  return { width: e[a + "Width"], height: e[a + "Height"] };
}
var viewport = getViewport();
var updateViewport = function () {
  viewport = getViewport();
};
var scrollHandler = function (e) {
  if ($(".subquestion").length) {
    $(".subquestion").removeClass("scrolled");
    var scrollTop = $(window).scrollTop(),
      question = $(".subquestion:visible");
    scrollTop > question.offset().top - 5 && question.addClass("scrolled");
  }
};
$(window).smartresize(updateViewport);
$(window).scroll(_.throttle(scrollHandler, 300));
$.fn.resizeChoices = function () {
  if ($(this).is(":visible")) {
    var widestChoice = 0,
      $choices = $(this).find(".radio, .checkbox").removeAttr("style");
    $choices.each(function () {
      $(this).outerWidth() > widestChoice &&
        (widestChoice = $(this).outerWidth());
    });
    $choices.width(widestChoice + 1);
  }
  return this;
};
var Bind = {
  init: function () {
    this.submitButton();
    this.inputChange();
  },
  submitButton: function (e) {
    var submitButton = $(".submit-btn");
    if (submitButton.length) {
      var bgColor = submitButton.css("background-color");
      submitButton
        .on("click", function (e) {
          if ($(this).hasClass("disabled")) {
            e.stopPropagation();
            e.preventDefault();
          }
        })
        .css("color", getContrastColor(bgColor));
      $("input, textarea").not("[type=submit]").filter(":visible").length > 0 &&
        submitButton.addClass("disabled").prop("disabled", !0);
    }
  },
  inputChange: function (e) {
    $(":radio, :checkbox").on("change", function () {
      var allAnswered = !0;
      var inputs = $(this)
        .closest(".answer")
        .find(".js-question-options")
        .find("input[type=radio], input[type=checkbox]")
        .not(":disabled");
      allAnswered = inputs.filter(":checked").length > 0;
      inputs.filter(":radio").each(function () {
        var name = this.name;
        $('input[name="' + name + '"]:checked').length || (allAnswered = !1);
      });
      $(this).hasClass("exclusive") && $(this).is(":checked")
        ? $(this)
            .closest(".answer")
            .find(".checkbox input:visible, .radio input:visible")
            .not(".exclusive")
            .prop("checked", !1)
            .prop("disabled", !0)
            .closest("label")
            .addClass("disabled")
        : $(this)
            .closest(".answer")
            .find(".checkbox input:visible, .radio input:visible")
            .prop("disabled", !1)
            .closest("label")
            .removeClass("disabled");
      toggleSubmission(allAnswered);
    });
    $("input[type=text], textarea, input[type=textbox], input[type=number]").on(
      "keyup",
      toggleSubmission
    );
    $(
      "input[type=text], textarea, input[type=textbox], input[type=number], input[type=date]"
    ).on("change", toggleSubmission);
  },
};
var Submit = {
  enable: function () {
    $("#survey")
      .find(".submit-btn")
      .removeClass("disabled")
      .prop("disabled", !1)
      .siblings(".keypress-for-enter")
      .addClass("show");
  },
  disable: function () {
    $("#survey")
      .find(".submit-btn")
      .addClass("disabled")
      .prop("disabled", !0)
      .siblings(".keypress-for-enter")
      .removeClass("show");
  },
};
var toggleSubmission = function (e) {
  var isAnswered = e;
  e.target && (isAnswered = $.trim(e.target.value).length > 0);
  isAnswered ? Submit.enable() : Submit.disable();
};
_.templateSettings = {
  interpolate: /##(.+?)##/g,
  evaluate: /\{%([\s\S]+?)%\}/g,
  escape: /\{%-([\s\S]+?)%\}/g,
};
var Template = {
  el: function () {
    return $("#survey").find(".question-container");
  },
  template: function (item) {
    return (
      !!$("#screener-template").length &&
      _.template($("#screener-template").html(), item)
    );
  },
  question: function () {
    return !("undefined" == typeof question || !question) && question;
  },
  init: function () {
    if (this.questionIsRenderable()) {
      this.render();
    } else {
      $(".options").resizeChoices();
      DatePicker.init();
    }
  },
  questionIsRenderable: function () {
    var renderable = this.question() && this.question().TemplateName;
    renderable &&
      this.question().QuestionOptions &&
      _.each(this.question().QuestionOptions, function (item) {
        (item.Display && null != item.Precode) || (renderable = !1);
      });
    return renderable;
  },
  render: function () {
    var self = this;
    self.el().find("#nontemplate").remove();
    self.el().replaceWith(self.template({ item: self.question() }));
    self.groupChildItems();
    self.setupQuestions();
    DatePicker.init();
    self.el().find(".grid-question").length && self.bindGridTds();
  },
  bindGridTds: function () {
    this.el()
      .find("td")
      .on("click", function (e) {
        var $input = $(e.target).closest("td").find("input");
        if ($input.length) {
          $(this).addClass("checked").siblings("td").removeClass("checked");
          $input.attr("checked", !0);
        }
        e.target != $input[0] && $input.trigger("change");
      });
  },
  setupQuestions: function () {
    var screener = this.el();
    var subquestions = screener.find(".answer .subquestion");
    if (subquestions.length) {
      subquestions.first().show().siblings().hide();
      this.setupGridNavigation();
    }
    $(".options").resizeChoices();
  },
  setupGridNavigation: function () {
    var self = this;
    var prev = $("<a/>").addClass("prev disabled").html("&#139;"),
      next = $("<a/>").addClass("next disabled").html("&#155;");
    self.el().prepend(next).prepend(prev);
    prev.on("click", function (e) {
      e.preventDefault();
      $(this).hasClass("disabled") || self.getNextCard("prev");
    });
    next.on("click", function (e) {
      e.preventDefault();
      $(this).hasClass("disabled") || self.getNextCard("next");
    });
    $("input[type=radio]").on("change", function () {
      if ($(this).is(":checked")) {
        next.removeClass("disabled");
        next.trigger("click");
      }
    });
  },
  animateCards: function (currentCard, nextCard, direction) {
    currentCard.hide("slide", { direction: direction.hide }, 200, function () {
      nextCard.show("slide", { direction: direction.show }, 200);
    });
  },
  getNextCard: function (order) {
    var direction = {
      hide: "next" == order ? "left" : "right",
      show: "next" == order ? "right" : "left",
    };
    var currentCard = this.el().find(".subquestion:visible");
    var nextCard = currentCard[order]();
    if (nextCard.length) {
      this.animateCards(currentCard, nextCard, direction);
      nextCard.not(":last-child") && nextCard.find("input").is(":checked")
        ? $(".next").removeClass("disabled")
        : $(".next").addClass("disabled");
      nextCard.is(":first-child")
        ? $(".prev").addClass("disabled")
        : $(".prev").removeClass("disabled");
    }
  },
  groupChildItems: function () {
    $(".options .collection").each(function (i) {
      var parentItem = $(this).attr("data-parent"),
        safeString = parentItem
          .toLowerCase()
          .replace(/ /g, "-")
          .replace(/[^a-zA-Z0-9\.]+/g, ""),
        el = "." + safeString,
        newParentEl =
          "<div class='radio " + safeString + "'>" + parentItem + "</div>";
      $(el).length || $(this).before(newParentEl);
      $(el).append(this);
    });
  },
};
var DatePicker = {
  el: $(".datepicker"),
  init: function () {
    this.el.length && this.checkHtml5();
  },
  checkHtml5: function () {
    var el = document.createElement("input");
    el.setAttribute("type", "date");
    if ("text" === el.type) {
      this.el.pikaday({ format: "MM/DD/YYYY" });
    } else {
      var today = new Date(),
        dateString = [
          today.getFullYear(),
          today.getMonth() + 1,
          today.getDate(),
        ].join("-");
      this.el.attr("max", dateString);
    }
  },
};
$(document).ready(function () {
  $(window).smartresize(function () {
    $(".options").resizeChoices();
  });
});
